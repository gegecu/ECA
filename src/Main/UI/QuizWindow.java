/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Main.UI;

import Main.Components.Question;
import Main.Components.StoryProfile;
import Main.ITSController;
import Main.UI.Components.ChoiceCell;
import Main.UI.Components.ChoiceTableModel;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Collections;

/**
 *
 * @author crimsiris
 */
public class QuizWindow extends javax.swing.JFrame{

    private final String HTML_HEADER = "<html>" +
                                            "<p style=\"font-family:Edmondsans;font-size:12px;\">" +
                                                "%s" +
                                            "</p>" +
                                        "</html>";
    
    private final String HTML_QUESTION = "<html>" +
                                            "<div style=\"width:%dpx;text-align:justify;font-family:Edmondsans;font-size:15px;\">" +
                                                "<p> %s </p>" +
                                            "</div>" + 
                                        "</html>";
    
    private final int QUESTION_LABEL_WIDTH=400;
    private final int ROW_HEIGHT=63;  
    private final int ICON_WIDTH=50;
    private final int CHOICE_LABEL_WIDTH=340;
    
    ITSController controller;
    
    ArrayList<Question> questions;
    int questionNumber;
    Question currentQuestion;
    
    private ChoiceTableModel tableModel;
    
    /**
     * Creates new form QuizWindow
     */
    public QuizWindow(ITSController controller, ArrayList<Question> questions) {
        initComponents();
        
        initializeComponents(controller, questions);
        
    }
    
    
    private void initializeComponents(ITSController controller, ArrayList<Question> questions)
    {
        this.controller=controller;
        
        this.questions=questions;
        Collections.shuffle(this.questions);
        
        questionNumber=0;
        
        tblChoices.setDefaultRenderer(String.class, new ChoiceCell(ICON_WIDTH, CHOICE_LABEL_WIDTH));
	tblChoices.setDefaultEditor(String.class, new ChoiceCell(ICON_WIDTH, CHOICE_LABEL_WIDTH));
        
        tblChoices.getTableHeader().setPreferredSize(new Dimension(-1, 0));
        tblChoices.setRowHeight(ROW_HEIGHT);
        
        addListeners();
        
    }
    
    public void initialize()
    {
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
        displayQuestion();
    }
    
    public void addListeners()
    {
        tblChoices.addMouseListener(this.controller);
        selfReportingPanel.happyPanel.addMouseListener(this.controller);
        selfReportingPanel.sadPanel.addMouseListener(this.controller);
    }
    
    public void displayQuestion()
    {
        if (questionNumber<questions.size())
        {
            String s=String.format(HTML_HEADER, "You are answering question " + (questionNumber+1) + " of " + questions.size());
            lblHeader.setText(s);
            currentQuestion=(this.questions).get(questionNumber);

            s=String.format(HTML_QUESTION, QUESTION_LABEL_WIDTH, currentQuestion.getQuestion());
            lblQuestion.setText(s);

            displayChoices();

            questionNumber++;
        }
        
    }
    
    private void displayChoices()
    {
        ArrayList<String> choices=currentQuestion.getChoices(); 
        tableModel=new ChoiceTableModel(choices);
               
        tblChoices.setModel(tableModel);       
    }
     
//    public boolean checkAnswer()
//    {
//        int selectedRow=tblChoices.getSelectedRow();
//        if (selectedRow > -1)
//        {
//            String answer=(String)tblChoices.getValueAt(selectedRow, 0);
//            return isCorrect(answer);
//        }
//        
//        return false;
//    }
    
    public int checkForAnswer()
    {
        int selectedRow=tblChoices.getSelectedRow();
        if (selectedRow == -1)
            return 0;
        
        String answer=(String)tblChoices.getValueAt(selectedRow, 0);
        return isCorrect(answer);
        
    }
    
    public int isCorrect(String answer)
    {
        if (currentQuestion.checkAnswer(answer))
            return 1;
        
        return -1;
    }
    
    public void suspend()
    {
        this.setVisible(false);
    }
    
    public void resume()
    {
        this.setVisible(true);
    }
    
    public void close()
    {
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblHeader = new javax.swing.JLabel();
        lblQuestion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChoices = new javax.swing.JTable();
        selfReportingPanel = new Main.UI.Components.SelfReportingPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblHeader.setText("jLabel1");

        lblQuestion.setText("jLabel2");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choices", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Edmondsans", 0, 15))); // NOI18N

        tblChoices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblChoices);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(lblQuestion, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                    .add(lblHeader, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(selfReportingPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(lblHeader)
                .add(18, 18, 18)
                .add(lblQuestion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 285, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(selfReportingPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblQuestion;
    public Main.UI.Components.SelfReportingPanel selfReportingPanel;
    public javax.swing.JTable tblChoices;
    // End of variables declaration//GEN-END:variables
}
