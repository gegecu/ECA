/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Main.UI.Components;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.ArrayList;

/**
 *
 * @author crimsiris
 */
public class EmoticonPanel extends javax.swing.JPanel {

    private int ICON_WIDTH=40;
    private final Color HAPPY_ICON_BGCOLOR=new Color(255,215,0); // Gold
    private final Color SAD_ICON_BGCOLOR=new Color(135,206,250); // Sky blue
    
    private ArrayList<Color> bgColors;
    private Color iconBGColor;
    
    private boolean emotionalState;
    
    /**
     * Creates new form EmoticonPanel
     */
    public EmoticonPanel() {
        initComponents();
        initializeComponents();
    }
    
    public void initializeComponents()
    {
        this.setSize(new Dimension(ICON_WIDTH, ICON_WIDTH));
        this.setBackground(Color.WHITE);       
    }
    
    public boolean getEmotionalState()
    {
        return this.emotionalState;
    }
    
    public void setEmotionalState(boolean emotionalState)
    {
        this.emotionalState=emotionalState;
        
        if (emotionalState)
            iconBGColor = HAPPY_ICON_BGCOLOR;
        else
            iconBGColor=SAD_ICON_BGCOLOR;
    }
    
    public void setIconWidth(int iconWidth)
    {
        ICON_WIDTH=iconWidth;
    }
    
    @Override
    protected void paintComponent(Graphics g) 
    {
        super.paintComponent(g);       
        
        int panelWidth=getPreferredSize().width;
        int panelHeight=getPreferredSize().height;
        
        Graphics2D g2d = (Graphics2D) g;
        
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        g2d.setColor(iconBGColor);
        g2d.fillOval(0, 0, panelWidth, panelHeight);
        
        g2d.setColor(Color.WHITE);
        int x = panelWidth/9;
        int y = panelHeight/7;
        g2d.fillOval(x*2, y*3, 3, 3);
        
        g2d.fillOval(x*7, y*3, 3, 3);
        
        if (emotionalState)
            g2d.drawArc(x + (x/3), panelHeight/3, x*7, y*3, 180, 180);
        else
            g2d.drawArc(x + (x/3), (panelHeight/7)*4 + (panelHeight/7)/3, x*7, y*3, 0, 180);
        
        g2d.dispose();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
