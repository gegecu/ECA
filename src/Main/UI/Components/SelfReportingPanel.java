/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Main.UI.Components;

import java.awt.Color;
import java.awt.Dimension;
import javax.swing.BorderFactory;
import javax.swing.JPanel;

/**
 *
 * @author crimsiris
 */
public class SelfReportingPanel extends javax.swing.JPanel {

   private final String HTML_TEXT = "<html>" +
                                        "<div style=\"width:%dpx;text-align:justify;\">" +
                                            "<p style=\"font-family:Edmondsans;font-size:10.5px;\">%s</p>" +
                                        "</div>" +
                                      "</html>";
   
    private final String HTML_FILLER = "<html>" +
                                        "<div style=\"width:%dpx;\"></div>" +
                                      "</html>";
    
    private final int FILLER_WIDTH=25;
    private final int TEXT_LABEL_WIDTH=90;
    private final int EMOTICON_LABEL_WIDTH=60;
    
    private final Color BORDER_COLOR=new Color(211,211,211);
    
    private Dimension panelDimension=new Dimension(433,56);
    private Dimension emoticonPanelDimension;
    
    /**
     * Creates new form SelfReportingPanel
     */
    public SelfReportingPanel() 
    {
        initComponents();
        initializeComponents();
    }
    
    private void initializeComponents()
    {
        this.setBackground(Color.WHITE);
        this.setSize(panelDimension);
        
        String s=formatText(TEXT_LABEL_WIDTH, "Right now, I feel.. ");
        text.setText(s); 
        
        adjustFillers(FILLER_WIDTH);
             
        happyIcon.setEmotionalState(true);
        happyIcon.repaint();
        s=formatText(EMOTICON_LABEL_WIDTH, "Happy");
        happyLabel.setText(s); 
        happyPanel.setBorder(BorderFactory.createMatteBorder(1, 4, 1, 1, Color.WHITE)); 
        
        int width=(happyIcon.getSize()).width + (happyLabel.getSize()).width + 6;
        emoticonPanelDimension=new Dimension(width, panelDimension.height);
        happyPanel.setSize(emoticonPanelDimension);
       
        sadIcon.setEmotionalState(false);
        sadIcon.repaint();
        s=formatText(EMOTICON_LABEL_WIDTH, "Sad");
        sadLabel.setText(s); 
        sadPanel.setBorder(BorderFactory.createMatteBorder(1, 4, 1, 1, Color.WHITE)); 
        
        width=(sadIcon.getSize()).width + (sadIcon.getSize()).width + 6;
        emoticonPanelDimension=new Dimension(width, panelDimension.height);
        sadPanel.setSize(emoticonPanelDimension);
            
    }
    
    private String formatText(int labelWidth, String text)
    {
        return String.format(HTML_TEXT, labelWidth, text);
    }
    
    public void adjustFillers(int width)
    {
        String s=String.format(HTML_FILLER, width);
        fillerRight.setText(s);
        fillerLeft.setText(s);
    }
    
    public void setBorder(JPanel panel)
    {
        if (panel.equals(happyPanel))
        {
            happyPanel.setBorder(BorderFactory.createMatteBorder(1, 4, 1, 1, BORDER_COLOR));  
            sadPanel.setBorder(BorderFactory.createMatteBorder(1, 4, 1, 1, Color.WHITE));  
        }
        else if (panel.equals(sadPanel))
        {
            
            sadPanel.setBorder(BorderFactory.createMatteBorder(1, 4, 1, 1, BORDER_COLOR)); 
            happyPanel.setBorder(BorderFactory.createMatteBorder(1, 4, 1, 1, Color.WHITE));  
        }
        
    }
    
    public boolean getEmotionalState (JPanel source)
    {
        if (source.equals(happyPanel))
            return true;
        else
            return false;
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        text = new javax.swing.JLabel();
        happyPanel = new javax.swing.JPanel();
        happyLabel = new javax.swing.JLabel();
        happyIcon = new Main.UI.Components.EmoticonPanel();
        sadPanel = new javax.swing.JPanel();
        sadLabel = new javax.swing.JLabel();
        sadIcon = new Main.UI.Components.EmoticonPanel();
        fillerLeft = new javax.swing.JLabel();
        fillerRight = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setSize(new java.awt.Dimension(433, 56));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        text.setFont(new java.awt.Font("Edmondsans", 0, 13)); // NOI18N
        text.setText("Right now, I feel..");
        text.setSize(new java.awt.Dimension(433, 54));

        happyPanel.setBackground(new java.awt.Color(255, 255, 255));

        happyLabel.setFont(new java.awt.Font("Edmondsans", 0, 13)); // NOI18N
        happyLabel.setText("Happy");

        org.jdesktop.layout.GroupLayout happyIconLayout = new org.jdesktop.layout.GroupLayout(happyIcon);
        happyIcon.setLayout(happyIconLayout);
        happyIconLayout.setHorizontalGroup(
            happyIconLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 40, Short.MAX_VALUE)
        );
        happyIconLayout.setVerticalGroup(
            happyIconLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 40, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout happyPanelLayout = new org.jdesktop.layout.GroupLayout(happyPanel);
        happyPanel.setLayout(happyPanelLayout);
        happyPanelLayout.setHorizontalGroup(
            happyPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(happyPanelLayout.createSequentialGroup()
                .add(3, 3, 3)
                .add(happyIcon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(happyLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(3, 3, 3))
        );
        happyPanelLayout.setVerticalGroup(
            happyPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(happyPanelLayout.createSequentialGroup()
                .add(3, 3, 3)
                .add(happyPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(happyIcon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(happyLabel))
                .add(3, 3, 3))
        );

        sadPanel.setBackground(new java.awt.Color(255, 255, 255));

        sadLabel.setFont(new java.awt.Font("Edmondsans", 0, 13)); // NOI18N
        sadLabel.setText("Sad");

        org.jdesktop.layout.GroupLayout sadIconLayout = new org.jdesktop.layout.GroupLayout(sadIcon);
        sadIcon.setLayout(sadIconLayout);
        sadIconLayout.setHorizontalGroup(
            sadIconLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 40, Short.MAX_VALUE)
        );
        sadIconLayout.setVerticalGroup(
            sadIconLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 40, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout sadPanelLayout = new org.jdesktop.layout.GroupLayout(sadPanel);
        sadPanel.setLayout(sadPanelLayout);
        sadPanelLayout.setHorizontalGroup(
            sadPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sadPanelLayout.createSequentialGroup()
                .add(3, 3, 3)
                .add(sadIcon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sadLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(3, 3, 3))
        );
        sadPanelLayout.setVerticalGroup(
            sadPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sadPanelLayout.createSequentialGroup()
                .add(3, 3, 3)
                .add(sadPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(sadLabel)
                    .add(sadIcon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(3, 3, 3))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(fillerLeft)
                .add(0, 0, 0)
                .add(text, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(happyPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(5, 5, 5)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(sadPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(fillerRight)
                .add(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(5, 5, 5)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(text)
                    .add(sadPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(fillerLeft)
                    .add(fillerRight)
                    .add(happyPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(5, 5, 5))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fillerLeft;
    private javax.swing.JLabel fillerRight;
    private Main.UI.Components.EmoticonPanel happyIcon;
    private javax.swing.JLabel happyLabel;
    public javax.swing.JPanel happyPanel;
    private javax.swing.JSeparator jSeparator1;
    private Main.UI.Components.EmoticonPanel sadIcon;
    private javax.swing.JLabel sadLabel;
    public javax.swing.JPanel sadPanel;
    private javax.swing.JLabel text;
    // End of variables declaration//GEN-END:variables
}
