/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Main.UI;

import Main.ITSController;

/**
 *
 * @author crimsiris
 */
public final class FeedbackWindow extends javax.swing.JFrame {

    private final int ICON_WIDTH=80;
    
    private final int LABEL_WIDTH=180;
    
    private final String FEEDBACK_POSITIVE="You got it!";
    private final String FOLLOWUP_POSITIVE="Great job, %s!";
    private final String BUTTON_NEXT_QUESTION="Thank you! What's the next question?";
    
    private final String FEEDBACK_NEGATIVE="That's not the right answer";
    private final String FOLLOWUP_NEGATIVE="You can do it, %s!";
    private final String BUTTON_TRY_AGAIN="I want to try again";
    
    private final String FEEDBACK_NO_ANSWER="Oops!";
    private final String FOLLOWUP_NO_ANSWER="You forgot to answer the question, %s";
    private final String BUTTON_GO_BACK="OK, I'll go back and answer the question";
    
    private final String FEEDBACK_CHAT="You're feeling sad";
    private final String FOLLOWUP_CHAT="Let's take a break and talk, ok?";
    private final String BUTTON_CHAT="OK!";
    
    private ITSController controller;
    
    private boolean showNextQuestion=false;
    private boolean toIntervene=false;
    
    /**
     * Creates new form FeedbackWindow
     */
    public FeedbackWindow(ITSController controller, int feedbackType, String userName) {
        initComponents();
        
        initializeComponents(controller, feedbackType, userName);
    }
    
    public FeedbackWindow(ITSController controller, String userName) {
        initComponents();
        
        initializeComponents(controller);
    }
    
    private void initializeComponents(ITSController controller, int feedbackType, String userName)
    {
        this.controller=controller;
        
        String feedback="";
        String followup="";
        
        switch(feedbackType)
        {
            // Answer is correct
            case 1: 
                feedback=FEEDBACK_POSITIVE;
                followup=String.format(FOLLOWUP_POSITIVE, userName);
            
                btnClose.setText(BUTTON_NEXT_QUESTION);
            
                showNextQuestion=true;
                break;
            // Answer is incorrect
            case -1:
                feedback=FEEDBACK_NEGATIVE;
                followup=String.format(FOLLOWUP_NEGATIVE, userName);
            
                btnClose.setText(BUTTON_TRY_AGAIN);
                break;
            // The user did not answer the question
            case 0:
                feedback=FEEDBACK_NO_ANSWER;
                followup=String.format(FOLLOWUP_NO_ANSWER, userName);
                
                btnClose.setText(BUTTON_GO_BACK);
                break;
                
        }
        
         
        feedbackPanel.updatePanel(feedback, followup, null, ICON_WIDTH, LABEL_WIDTH);
        
        addListeners();
    }
    
    private void initializeComponents(ITSController controller)
    {
        this.controller=controller;

        btnClose.setText(BUTTON_CHAT);
        feedbackPanel.updatePanel(FEEDBACK_CHAT, FOLLOWUP_CHAT, null, ICON_WIDTH, LABEL_WIDTH);
        toIntervene=true;
        
        addListeners();
    }
    
    private void addListeners()
    {
        btnClose.addActionListener(this.controller);
    }
    
    public void initialize()
    {
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
    }
    
    public boolean showNextQuestion()
    {
        return showNextQuestion;
    }
    
    public boolean toIntervene()
    {
        return toIntervene;
    }

    public void close()
    {
        this.dispose();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        feedbackPanel = new Main.UI.Components.GeneralInfoPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnClose.setText("jButton1");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(60, 60, 60)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(feedbackPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .add(btnClose, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(60, 60, 60))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .add(feedbackPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(8, 8, 8)
                .add(btnClose)
                .add(40, 40, 40))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCloseActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnClose;
    private Main.UI.Components.GeneralInfoPanel feedbackPanel;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
